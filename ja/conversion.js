var car;
function cyrlat () {
car = document.transcription.text1.value;
car = car.replace(/(きゃ|キャ)/, 'kya');
car = car.replace(/(きゅ|キュ)/, 'kyu');
car = car.replace(/(きょ|キョ)/, 'kyo');
car = car.replace(/(しゃ|シャ)/, 'sha');
car = car.replace(/(しゅ|シュ)/, 'shu');
car = car.replace(/(しょ|ショ)/, 'sho');
car = car.replace(/(ちゃ|チャ)/, 'cha');
car = car.replace(/(ちゅ|チュ)/, 'chu');
car = car.replace(/(ちょ|チョ)/, 'cho');
car = car.replace(/(にゃ|ニャ)/, 'nya');
car = car.replace(/(にゅ|ニュ)/, 'nyu');
car = car.replace(/(にょ|ニョ)/, 'nyo');
car = car.replace(/(ひゃ|ヒャ)/, 'hya');
car = car.replace(/(ひゅ|ヒュ)/, 'hyu');
car = car.replace(/(ひょ|ヒョ)/, 'hyo');
car = car.replace(/(みゃ|ミャ)/, 'mya');
car = car.replace(/(みゅ|ミュ)/, 'myu');
car = car.replace(/(みょ|ミョ)/, 'myo');
car = car.replace(/(りゃ|リャ)/, 'rya');
car = car.replace(/(りゅ|リュ)/, 'ryu');
car = car.replace(/(りょ|リョ)/, 'ryo');
car = car.replace(/(ゐゃ|ヰャ)/, 'iya');
car = car.replace(/(ゐゅ|ヰュ)/, 'iyu');
car = car.replace(/(ゐょ|ヰョ)/, 'iyo');
car = car.replace(/(ぎゃ|ギャ)/, 'gya');
car = car.replace(/(ぎゅ|ギュ)/, 'gyu');
car = car.replace(/(ぎょ|ギョ)/, 'gyo');
car = car.replace(/(びゃ|ビャ)/, 'bya');
car = car.replace(/(びゅ|ビュ)/, 'byu');
car = car.replace(/(びょ|ビョ)/, 'byo');
car = car.replace(/(ぴゃ|ピャ)/, 'pya');
car = car.replace(/(ぴゅ|ピュ)/, 'pyu');
car = car.replace(/(ぴょ|ピョ)/, 'pyo');
car = car.replace(/(じゃ|ジャ)/, 'ja');
car = car.replace(/(じゅ|ジュ)/, 'ju');
car = car.replace(/(じょ|ジョ)/, 'jo');
car = car.replace(/(ぢゃ|ヂャ)/, 'ja');
car = car.replace(/(ぢゅ|ヂュ)/, 'ju');
car = car.replace(/(ぢょ|ヂョ)/, 'jo');
car = car.replace(/(し|シ)/, 'shi');
car = car.replace(/(ち|チ)/, 'chi');
car = car.replace(/(つ|ツ)/, 'tsu');
car = car.replace(/(ん|ン)/, 'n'');
car = car.replace(/(か|カ)/, 'ka');
car = car.replace(/(き|キ)/, 'ki');
car = car.replace(/(く|ク)/, 'ku');
car = car.replace(/(け|ケ)/, 'ke');
car = car.replace(/(こ|コ)/, 'ko');
car = car.replace(/(さ|サ)/, 'sa');
car = car.replace(/(す|ス)/, 'su');
car = car.replace(/(せ|セ)/, 'se');
car = car.replace(/(そ|ソ)/, 'so');
car = car.replace(/(た|タ)/, 'ta');
car = car.replace(/(て|テ)/, 'te');
car = car.replace(/(と|ト)/, 'to');
car = car.replace(/(な|ナ)/, 'na');
car = car.replace(/(に|ニ)/, 'ni');
car = car.replace(/(ぬ|ヌ)/, 'nu');
car = car.replace(/(ね|ネ)/, 'ne');
car = car.replace(/(の|ノ)/, 'no');
car = car.replace(/(は|ハ)/, 'ha');
car = car.replace(/(ひ|ヒ)/, 'hi');
car = car.replace(/(ふ|フ)/, 'fu');
car = car.replace(/(へ|ヘ)/, 'he');
car = car.replace(/(ほ|ホ)/, 'ho');
car = car.replace(/(ま|マ)/, 'ma');
car = car.replace(/(み|ミ)/, 'mi');
car = car.replace(/(む|ム)/, 'mu');
car = car.replace(/(め|メ)/, 'me');
car = car.replace(/(も|モ)/, 'mo');
car = car.replace(/(や|ヤ)/, 'ya');
car = car.replace(/(ゆ|ユ)/, 'yu');
car = car.replace(/(よ|ヨ)/, 'yo');
car = car.replace(/(ら|ラ)/, 'ra');
car = car.replace(/(り|リ)/, 'ri');
car = car.replace(/(る|ル)/, 'ru');
car = car.replace(/(れ|レ)/, 're');
car = car.replace(/(ろ|ロ)/, 'ro');
car = car.replace(/(わ|ワ)/, 'wa');
car = car.replace(/(が|ガ)/, 'ga');
car = car.replace(/(ぎ|ギ)/, 'gi');
car = car.replace(/(ぐ|グ)/, 'gu');
car = car.replace(/(げ|ゲ)/, 'ge');
car = car.replace(/(ご|ゴ)/, 'go');
car = car.replace(/(ざ|ザ)/, 'za');
car = car.replace(/(じ|ジ)/, 'ji');
car = car.replace(/(ず|ズ)/, 'zu');
car = car.replace(/(ぜ|ゼ)/, 'ze');
car = car.replace(/(ぞ|ゾ)/, 'zo');
car = car.replace(/(だ|ダ)/, 'da');
car = car.replace(/(ぢ|ヂ)/, 'ji');
car = car.replace(/(づ|ヅ)/, 'zu');
car = car.replace(/(で|デ)/, 'de');
car = car.replace(/(ど|ド)/, 'do');
car = car.replace(/(ば|バ)/, 'ba');
car = car.replace(/(び|ビ)/, 'bi');
car = car.replace(/(ぶ|ブ)/, 'bu');
car = car.replace(/(べ|ベ)/, 'be');
car = car.replace(/(ぼ|ボ)/, 'bo');
car = car.replace(/(ぱ|パ)/, 'pa');
car = car.replace(/(ぴ|ピ)/, 'pi');
car = car.replace(/(ぷ|プ)/, 'pu');
car = car.replace(/(ぺ|ペ)/, 'pe');
car = car.replace(/(ぽ|ポ)/, 'po');
car = car.replace(/(ゔ|ヴ)/, 'vu');
car = car.replace(/(あ|ア)/, 'a');
car = car.replace(/(い|イ)/, 'i');
car = car.replace(/(う|ウ)/, 'u');
car = car.replace(/(え|エ)/, 'e');
car = car.replace(/(お|オ)/, 'o');
car = car.replace(/(ゐ|ヰ)/, 'i');
car = car.replace(/(ゑ|ヱ)/, 'e');
car = car.replace(/(を|ヲ)/, 'o');
document.transcription.text2.value=car;
}
function copy1()
{ textRange=document.transcription.text1.createTextRange();   textRange.execCommand("Copy");   textRange="";
}
function copy2()
{ textRange=document.transcription.text2.createTextRange();   textRange.execCommand("Copy");   textRange="";
}
